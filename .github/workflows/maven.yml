# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches:
      - master
      - develop
      - release
      
jobs:
  
  build:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Stamp artifact file name with commit hash
      run: |
        artifactName1=$(ls target/*.jar | head -1)
        commitHash=$(git rev-parse --short "$GITHUB_SHA")
        artifactName2=$(ls target/*.jar | head -1 | sed "s/.jar/.$commitHash.jar/g")
        mv $artifactName1 $artifactName2
    - uses: actions/upload-artifact@v2
      with:
          name: artifacts
          path: target/*.jar
          
  deploy:
    needs: build
    runs-on: ubuntu-latest    
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - uses: actions/download-artifact@v2
      with: 
        name: artifacts
    - name: Deploy to Dev
      if: github.ref == 'refs/heads/develop'
      run:  |
        echo "environment=dev" >> $GITHUB_ENV
        echo "USERNAME=${USERNAME}" >> $GITHUB_ENV
        echo "PASSWORD=${PASSWORD}" >> $GITHUB_ENV
        echo "ANYPOINT_ENV=${ANYPOINT_ENV}" >> $GITHUB_ENV
      env:
        USERNAME: ${{ secrets.ANYPOINT_USER }}
        PASSWORD: ${{ secrets.ANYPOINT_PASS }}
        ANYPOINT_ENV: ${{ secrets.ANYPOINT_ENV_DEV }}
      
        
    - name: Deploy to release
      if: github.ref == 'refs/heads/release'
      run:  |
        echo "environment=uat" >> $GITHUB_ENV
        echo "USERNAME=${USERNAME}" >> $GITHUB_ENV
        echo "PASSWORD=${PASSWORD}" >> $GITHUB_ENV
        echo "ANYPOINT_ENV=${ANYPOINT_ENV}" >> $GITHUB_ENV
      env:
        USERNAME: ${{ secrets.ANYPOINT_USER }}
        PASSWORD: ${{ secrets.ANYPOINT_PASS }}
        ANYPOINT_ENV: ${{ secrets.ANYPOINT_ENV_UAT }}
        
    - name: Deploy to Prod
      if: github.ref == 'refs/heads/master'
      run:  |
        echo "environment=prd" >> $GITHUB_ENV
        echo "USERNAME=${USERNAME}" >> $GITHUB_ENV
        echo "PASSWORD=${PASSWORD}" >> $GITHUB_ENV
        echo "ANYPOINT_ENV=${ANYPOINT_ENV}" >> $GITHUB_ENV
      env:
        USERNAME: ${{ secrets.ANYPOINT_USER }}
        PASSWORD: ${{ secrets.ANYPOINT_PASS }}
        ANYPOINT_ENV: ${{ secrets.ANYPOINT_ENV_PRD }}
        
    - run:  |
        artifactName=$(ls *.jar | head -1)
        echo ${{env.environment}}
        mvn mule:deploy -Dmule.artifact=$artifactName -Danypoint.userName=${{ env.USERNAME }} -Danypoint.password=${{ env.PASSWORD }} -Denvironment=${{ env.ANYPOINT_ENV }} -Dapp.cloudhub="agithubactions-poc-${{env.environment}}"
   
      
