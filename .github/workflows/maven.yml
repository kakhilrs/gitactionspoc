# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven
name: Mule Github Actions POC
on:
  push:
    branches:
      - master
      - release
      - develop
      
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Stamp artifact file name with commit hash
      run: |
        artifactName1=$(ls target/*.jar | head -1)
        commitHash=$(git rev-parse --short "$GITHUB_SHA")
        artifactName2=$(ls target/*.jar | head -1 | sed "s/.jar/.$commitHash.jar/g")
        mv $artifactName1 $artifactName2
    - uses: actions/upload-artifact@master
      with:
          name: artifacts
          path: target/*.jar
  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: ${{ env.environment }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@master
      with: 
        name: artifacts
      #name: Deploy-to-Cloudhub
      id: deploy
    #- id: "1234"
    - if: github.ref == 'refs/heads/develop'
      run: echo "environment=dev" >> $GITHUB_ENV #| echo "::set-output name=env::dev"
    #- name: Deploy to release
    - if: github.ref == 'refs/heads/release'
      run: echo "environment=uat" >> $GITHUB_ENV #| echo "::set-output name=env::uat"
    #- name: Deploy to Prod
    - if: github.ref == 'refs/heads/master'
      run: echo "environment=prod" >> $GITHUB_ENV #| echo "::set-output name=env::prod"
    - run:  |
        artifactName=$(ls *.jar | head -1)
        mvn mule:deploy -Dmule.artifact=$artifactName -Danypoint.userName="${{ secrets.username }}" -Danypoint.password="${{ secrets.password }}" -Dcloudhub.app="mule-git-actions-POC-${{ env.environment }}" -Dcloudhub.environment="Sandbox"
